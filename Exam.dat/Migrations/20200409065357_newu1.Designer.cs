// <auto-generated />
using System;
using Exam.dat;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Exam.dat.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200409065357_newu1")]
    partial class newu1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Exam.dat.DataModels.DegreeTb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("Degree")
                        .IsUnique()
                        .HasName("IX_DegreeTb");

                    b.ToTable("DegreeTb");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Degree = "初等"
                        },
                        new
                        {
                            Id = 2,
                            Degree = "中等"
                        },
                        new
                        {
                            Id = 3,
                            Degree = "高等"
                        });
                });

            modelBuilder.Entity("Exam.dat.DataModels.Mistake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasMaxLength(1000);

                    b.Property<string>("Calss")
                        .HasMaxLength(15);

                    b.Property<string>("Misanswer")
                        .HasMaxLength(1000);

                    b.Property<string>("Mistake1")
                        .HasColumnName("Mistake")
                        .HasMaxLength(4000);

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Mistake");
                });

            modelBuilder.Entity("Exam.dat.DataModels.Studentscore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Class")
                        .HasMaxLength(15);

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.Property<string>("Num")
                        .HasMaxLength(10);

                    b.Property<int?>("Score");

                    b.HasKey("Id");

                    b.ToTable("studentscore");
                });

            modelBuilder.Entity("Exam.dat.DataModels.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnName("answer")
                        .HasMaxLength(1000);

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnName("kind")
                        .HasMaxLength(100);

                    b.Property<string>("OptionFour")
                        .IsRequired()
                        .HasColumnName("optionFOUR")
                        .HasMaxLength(1000);

                    b.Property<string>("OptionOne")
                        .IsRequired()
                        .HasColumnName("optionONE")
                        .HasMaxLength(1000);

                    b.Property<string>("OptionThree")
                        .IsRequired()
                        .HasColumnName("optionTHREE")
                        .HasMaxLength(1000);

                    b.Property<string>("OptionTow")
                        .IsRequired()
                        .HasColumnName("optionTOW")
                        .HasMaxLength(1000);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.HasIndex("Degree");

                    b.HasIndex("Kind");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("Exam.dat.DataModels.TopicTypeTb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TopicType")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("TopicType")
                        .IsUnique()
                        .HasName("IX_TopicTypeTb");

                    b.ToTable("TopicTypeTb");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TopicType = "C#"
                        },
                        new
                        {
                            Id = 2,
                            TopicType = "JavaScreipt"
                        },
                        new
                        {
                            Id = 3,
                            TopicType = "ASP.NET"
                        });
                });

            modelBuilder.Entity("Exam.dat.DataModels.Topic", b =>
                {
                    b.HasOne("Exam.dat.DataModels.DegreeTb", "DegreeNavigation")
                        .WithMany("Topic")
                        .HasForeignKey("Degree")
                        .HasConstraintName("FK_Topic_DegreeTb")
                        .HasPrincipalKey("Degree");

                    b.HasOne("Exam.dat.DataModels.TopicTypeTb", "KindNavigation")
                        .WithMany("Topic")
                        .HasForeignKey("Kind")
                        .HasConstraintName("FK_Topic_TopicTypeTb")
                        .HasPrincipalKey("TopicType");
                });
#pragma warning restore 612, 618
        }
    }
}
